{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Pushkar Waykole\\\\Desktop\\\\WE project\\\\client\\\\src\\\\components\\\\Main\\\\Typing\\\\Typing.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./Typing.css\";\nimport Feedback from \"./Feedback\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getCloud = () => `Once, there was a boy who became bored when he watched over the village sheep grazing on the hillside.To entertain himself,he sang out,Wolf Wolf The wolf is chasing the sheep.`.split(\" \");\n\nfunction Word(props) {\n  const {\n    text,\n    active,\n    correct\n  } = props;\n\n  if (correct === true) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"correct\",\n      children: [text, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (correct === false) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"incorrect\",\n      children: [text, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this);\n  }\n\n  if (active === true) {\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"active\",\n      children: [text, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [text, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 10\n  }, this);\n}\n\n_c = Word;\nWord = /*#__PURE__*/React.memo(Word);\n\nfunction Timer(props) {\n  _s();\n\n  const {\n    correctWords\n  } = props;\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  useEffect(() => {\n    let id;\n\n    if (props.startCounting) {\n      id = setInterval(() => {\n        setTimeElapsed(oldTime => oldTime + 1);\n      }, 1000);\n    }\n\n    return () => {\n      clearInterval(id);\n    };\n  }, [props.startCounting]);\n  const minutes = timeElapsed / 60;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time: \", timeElapsed, \" s\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Speed: \", (correctWords / minutes || 0).toFixed(2), \" WPM \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Timer, \"SZxNbD1d+OuypfQIgyFHbrghQ2g=\");\n\n_c2 = Timer;\nexport default function App() {\n  _s2();\n\n  const [finished, setFinished] = useState(false);\n  const [userInput, setUserInput] = useState(\"\");\n  const cloud = useRef(getCloud());\n  const [startCounting, setStartCounting] = useState(false);\n  const [activeWordIndex, setActiveWordIndex] = useState(0);\n  const [correctWordArray, setCorrectWordArray] = useState([]);\n\n  function processInput(value) {\n    if (activeWordIndex === cloud.current.length) {\n      return;\n    }\n\n    if (!startCounting) {\n      setStartCounting(true);\n    }\n\n    if (value.endsWith(\" \")) {\n      //the user  finished the word\n      if (activeWordIndex === cloud.current.length - 1) {\n        //overflow\n        setStartCounting(false);\n        setUserInput(\"Completed\");\n        setFinished(true);\n      } else {\n        setUserInput(\"\");\n      }\n\n      setActiveWordIndex(index => index + 1);\n      setCorrectWordArray(data => {\n        const word = value.trim();\n        const newResult = [...data];\n        newResult[activeWordIndex] = word === cloud.current[activeWordIndex];\n        return newResult;\n      });\n    } else {\n      setUserInput(value);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"typing\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"typing-demo heading\",\n        children: \"Typing test ............\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats\",\n      children: /*#__PURE__*/_jsxDEV(Timer, {\n        startCounting: startCounting,\n        correctWords: correctWordArray.filter(Boolean).length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-box\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text\",\n        children: cloud.current.map((word, index) => {\n          return /*#__PURE__*/_jsxDEV(Word, {\n            text: word,\n            active: index === activeWordIndex,\n            correct: correctWordArray[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"start\",\n      children: \"Start typing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"input-field\",\n      style: {\n        height: \"80px\",\n        border: \"2px solid black\",\n        borderRadius: \"30px\",\n        border: \"none\"\n      },\n      type: \"text\",\n      value: userInput,\n      placeholder: \"Type the word\",\n      onChange: e => processInput(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"w8k46ELaUDEKj8Gxk78QJBLEv4I=\");\n\n_c3 = App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Word\");\n$RefreshReg$(_c2, \"Timer\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"sources":["C:/Users/Pushkar Waykole/Desktop/WE project/client/src/components/Main/Typing/Typing.js"],"names":["React","useEffect","useRef","useState","Feedback","getCloud","split","Word","props","text","active","correct","memo","Timer","correctWords","timeElapsed","setTimeElapsed","id","startCounting","setInterval","oldTime","clearInterval","minutes","toFixed","App","finished","setFinished","userInput","setUserInput","cloud","setStartCounting","activeWordIndex","setActiveWordIndex","correctWordArray","setCorrectWordArray","processInput","value","current","length","endsWith","index","data","word","trim","newResult","filter","Boolean","map","height","border","borderRadius","e","target"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./Typing.css\";\r\n\r\nimport Feedback from \"./Feedback\"\r\n\r\nconst getCloud = () => `Once, there was a boy who became bored when he watched over the village sheep grazing on the hillside.To entertain himself,he sang out,Wolf Wolf The wolf is chasing the sheep.`.split(\" \");\r\n\r\nfunction Word(props) {\r\n  const { text, active, correct } = props;\r\n\r\n  \r\n\r\n  if (correct === true) {\r\n    return <span className=\"correct\">{text} </span>;\r\n  }\r\n  if (correct === false) {\r\n    return <span className=\"incorrect\">{text} </span>;\r\n  }\r\n\r\n  if (active === true) {\r\n    return <span className=\"active\">{text} </span>;\r\n  }\r\n\r\n  return <span>{text} </span>;\r\n}\r\n\r\nWord = React.memo(Word);\r\n\r\nfunction Timer(props) {\r\n  const { correctWords } = props;\r\n  const [timeElapsed, setTimeElapsed] = useState(0);\r\n\r\n  useEffect(() => {\r\n    let id;\r\n    if (props.startCounting) {\r\n      id = setInterval(() => {\r\n        setTimeElapsed((oldTime) => oldTime + 1);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      clearInterval(id);\r\n    };\r\n  }, [props.startCounting]);\r\n\r\n  const minutes = timeElapsed / 60;\r\n  return (\r\n    <div>\r\n      <p>Time: {timeElapsed} s</p>\r\n      <p>Speed: {(correctWords / minutes || 0).toFixed(2)} WPM </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  const [finished, setFinished] = useState(false);\r\n  const [userInput, setUserInput] = useState(\"\");\r\n\r\n  const cloud = useRef(getCloud());\r\n\r\n  const [startCounting, setStartCounting] = useState(false);\r\n\r\n  const [activeWordIndex, setActiveWordIndex] = useState(0);\r\n\r\n  const [correctWordArray, setCorrectWordArray] = useState([]);\r\n\r\n  function processInput(value) {\r\n    if (activeWordIndex === cloud.current.length) {\r\n      return;\r\n    }\r\n    if (!startCounting) {\r\n      setStartCounting(true);\r\n    }\r\n\r\n    if (value.endsWith(\" \")) {\r\n      //the user  finished the word\r\n\r\n      if (activeWordIndex === cloud.current.length - 1) {\r\n        //overflow\r\n        setStartCounting(false);\r\n        setUserInput(\"Completed\");\r\n        setFinished(true);\r\n      } else {\r\n        setUserInput(\"\");\r\n      }\r\n      setActiveWordIndex((index) => index + 1);\r\n\r\n      setCorrectWordArray((data) => {\r\n        const word = value.trim();\r\n        const newResult = [...data];\r\n        newResult[activeWordIndex] = word === cloud.current[activeWordIndex];\r\n        return newResult;\r\n      });\r\n    } else {\r\n      setUserInput(value);\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"typing\"> \r\n\r\n<div class=\"wrapper\">\r\n    <div class=\"typing-demo heading\">\r\n      Typing test ............ \r\n    </div>\r\n</div>\r\n      \r\n      <div className=\"stats\">\r\n      <Timer\r\n        startCounting={startCounting}\r\n        correctWords={correctWordArray.filter(Boolean).length}\r\n      />\r\n      </div>\r\n\r\n      <div className=\"text-box\">\r\n      <p className=\"text\">\r\n        {cloud.current.map((word, index) => {\r\n          return (\r\n            <Word\r\n              text={word}\r\n              active={index === activeWordIndex}\r\n              correct={correctWordArray[index]}\r\n            />\r\n          );\r\n        })}\r\n      </p>\r\n      </div>\r\n\r\n      <div className=\"start\">Start typing</div>\r\n      <input\r\n      className=\"input-field\"\r\n        style={{ height: \"80px\", border: \"2px solid black\" ,borderRadius: \"30px\",border:\"none\"}}\r\n        type=\"text\"\r\n        value={userInput}\r\n        placeholder=\"Type the word\"\r\n        onChange={(e) => processInput(e.target.value)}\r\n      />\r\n      \r\n\r\n      \r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}